public class SwapParity {

    public static int[] swapParity(int[] arr) {
        int evenCount = 0;
        int oddCount = 0;

        // Count the number of even and odd elements in the array
        for (int num : arr) {
            if (num % 2 == 0) {
                evenCount++;
            } else {
                oddCount++;
            }
        }

        // Determine the target parity (even or odd)
        int targetParity = (evenCount > oddCount) ? 0 : 1;

        // Iterate through the array and swap elements to achieve the target parity
        for (int i = 0; i < arr.length; i++) {
            // If the current element's parity is not equal to the target parity, find a suitable swap
            if (arr[i] % 2 != targetParity) {
                for (int j = i + 1; j < arr.length; j++) {
                    if (arr[j] % 2 == targetParity) {
                        // Swap elements to achieve the target parity
                        int temp = arr[i];
                        arr[i] = arr[j];
                        arr[j] = temp;
                        break;
                    }
                }
            }
        }

        return arr;
    }

    public static void main(String[] args) {
        int[] arr = {2, 3, 4, 5, 6};
        int[] result = swapParity(arr);

        // Print the result
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
